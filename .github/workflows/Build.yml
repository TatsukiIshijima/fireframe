# https://github.com/android/nowinandroid/blob/main/.github/workflows/Build.yaml

name: Build

env:
  # The name of the main module repository
  main_project_module: app

  keystore_alias: ${{ secrets.KEYSTORE_ALIAS }}
  keystore_password: ${{ secrets.KEYSTORE_PASSWORD }}
  key_password: ${{ secrets.KEY_PASSWORD }}
  encoded_keystore: ${{ secrets.KEYSTORE }}
  open_weather_api_key: ${{ secrets.OPEN_WEATHER_API_KEY }}

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Allows you to run this workflow on push (merge into main) events
  push:
    branches:
      - 'main'
  # Triggers the workflow when a pull request is created
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_and_apk:
    name: "Local tests and APKs"
    runs-on: ubuntu-latest

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # Local properties write in local.properties
      - name: Setup local.properties
        run: |
          echo "openWeatherApiKey=${{ env.open_weather_api_key }}" >> local.properties

      # Decode keystore file encoded by base64
      - name: Decode Keystore
        run: |
          echo ${{ env.encoded_keystore }} | base64 --d > keystore.jks

      # Keystore properties write in keystore.properties
      - name: Set up keystore.properties
        run: |
          echo "storePassword=${{ env.keystore_password }}" >> keystore.properties
          echo "keyPassword=${{ env.key_password }}" >> keystore.properties
          echo "keyAlias=${{ env.keystore_alias }}" >> keystore.properties  
          echo "storeFile=`pwd`/keystore.jks" >> ./keystore.properties

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Check spotless
        run: ./gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache

      # Run tests build
      - name: Run local tests
        run: ./gradlew testDebugUnitTest --stacktrace

      # Create APK and AAB
      - name: Build all build type and flavor permutations
        run: | 
          ./gradlew :${{ env.main_project_module }}:assemble
          ./gradlew :${{ env.main_project_module }}:bundle

      # Upload build outputs (APKs and AABs)
      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: APKs and AABs
          path: | 
            **/build/outputs/apk/**/*.apk
            **/build/outputs/bundle/**/*.aab
          retention-days: 1